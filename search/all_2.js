var searchData=
[
  ['c_0',['C',['../classLinearSystem.html#a73fa288a432fea317b153d0f09fbc63f',1,'LinearSystem']]],
  ['calculate_1',['calculate',['../classFeedForward.html#a2e2f7c12076225fa1dfd5f18aa210290',1,'FeedForward::calculate()'],['../classLinearPlantInversionFeedforward.html#a20d1816e74e7d375243394af13d755da',1,'LinearPlantInversionFeedforward::calculate(const EVec&lt; STATES &gt; &amp;r, const EVec&lt; STATES &gt; &amp;next_r)'],['../classLinearPlantInversionFeedforward.html#ab7c413c37ff236c107fff443892a9cab',1,'LinearPlantInversionFeedforward::calculate(const EVec&lt; STATES &gt; &amp;next_r)'],['../classLinearPlantInversionFeedforward.html#af835d2768ac01a28e754ef1b9600d0f0',1,'LinearPlantInversionFeedforward::calculate(const EVec&lt; STATES &gt; &amp;r, const EVec&lt; STATES &gt; &amp;next_r, const double &amp;dt)'],['../classLinearPlantInversionFeedforward.html#a2b070d92df601f0236f5d30be7773130',1,'LinearPlantInversionFeedforward::calculate(const EVec&lt; STATES &gt; &amp;next_r, const double &amp;dt)'],['../classLinearQuadraticRegulator.html#a1b78ca01541b15d8cab520c18c161977',1,'LinearQuadraticRegulator::calculate()'],['../classTrapezoidProfile.html#a0b65a924664e6e052a16db19f73af17c',1,'TrapezoidProfile::calculate()']]],
  ['choice_2',['choice',['../classAutoChooser.html#a5fdde577439598e339b7e8429290c3db',1,'AutoChooser']]],
  ['commandcontroller_3',['CommandController',['../classCommandController.html',1,'CommandController'],['../classCommandController.html#afe87cef2dd63449334a46aae33b7edf4',1,'CommandController::CommandController()'],['../classCommandController.html#a9de2dfdf95ff4d80e2ad4906138c1316',1,'CommandController::CommandController(std::initializer_list&lt; AutoCommand * &gt; cmds)']]],
  ['compute_5fx_4',['compute_X',['../classLinearSystem.html#a354f0f9cfc8d41f998615563c036f4ca',1,'LinearSystem']]],
  ['compute_5fy_5',['compute_Y',['../classLinearSystem.html#adb91762c1fde94595e7aa77b50af1eec',1,'LinearSystem']]],
  ['condition_6',['Condition',['../classCondition.html',1,'']]],
  ['config_7',['config',['../classPID.html#a67626fa764b201c7190ace37e068666b',1,'PID']]],
  ['control_5fcontinuous_8',['control_continuous',['../classLift.html#ae585cb81d733c975a65bfa7914a6bfeb',1,'Lift']]],
  ['control_5fmanual_9',['control_manual',['../classLift.html#acfeaf4547de1b6a01982e8e51b0bb224',1,'Lift']]],
  ['control_5fsetpoints_10',['control_setpoints',['../classLift.html#a7197ad879474798a5c1fec4963058c3a',1,'Lift']]],
  ['core_11',['Core',['../md_README.html',1,'']]],
  ['correct_12',['correct',['../classKalmanFilter.html#a51f88cc7076561cfb08ac75f12095c1c',1,'KalmanFilter::correct(const OutputVector &amp;y, const InputVector &amp;u)'],['../classKalmanFilter.html#af59ef075d3bc72de7e0430beba29f576',1,'KalmanFilter::correct(const OutputVector &amp;y, const InputVector &amp;u, const EMat&lt; OUTPUTS, OUTPUTS &gt; &amp;R)'],['../classKalmanFilter.html#aeaf2197cf88c54477e8bb8db20b0f132',1,'KalmanFilter::correct(const EVec&lt; ROWS &gt; &amp;y, const InputVector &amp;u, const EMat&lt; ROWS, STATES &gt; &amp;C, const EMat&lt; ROWS, INPUTS &gt; &amp;D, const EMat&lt; ROWS, ROWS &gt; &amp;R)'],['../classUnscentedKalmanFilter.html#afec03a80fde19c58bd8a87a5d3939895',1,'UnscentedKalmanFilter::correct(const InputVector &amp;u, const OutputVector &amp;y)'],['../classUnscentedKalmanFilter.html#afdcfcb9d65f9664591f97ebed460df88',1,'UnscentedKalmanFilter::correct(const InputVector &amp;u, const OutputVector &amp;y, const EVec&lt; OUTPUTS &gt; &amp;measurement_stddevs)'],['../classUnscentedKalmanFilter.html#a4f68eb4b521ecafe700a8d38b7456ccb',1,'UnscentedKalmanFilter::correct(const InputVector &amp;u, const EVec&lt; ROWS &gt; &amp;y, const std::function&lt; EVec&lt; ROWS &gt;(const StateVector &amp;, const InputVector &amp;)&gt; &amp;h, const EVec&lt; ROWS &gt; &amp;measurement_stddevs)'],['../classUnscentedKalmanFilter.html#aa3e6f4ca6752cf901c5f77ab8be0db1c',1,'UnscentedKalmanFilter::correct(const InputVector &amp;u, const EVec&lt; ROWS &gt; &amp;y, const std::function&lt; EVec&lt; ROWS &gt;(const StateVector &amp;, const InputVector &amp;)&gt; &amp;h, const EVec&lt; ROWS &gt; measurement_stddevs, const std::function&lt; EVec&lt; ROWS &gt;(const EMat&lt; ROWS, NUM_SIGMAS &gt; &amp;, const EVec&lt; NUM_SIGMAS &gt; &amp;)&gt; &amp;mean_func_Y, const std::function&lt; EVec&lt; ROWS &gt;(const EVec&lt; ROWS &gt; &amp;, const EVec&lt; ROWS &gt; &amp;)&gt; &amp;residual_func_Y, const std::function&lt; StateVector(const StateVector &amp;, const StateVector &amp;)&gt; &amp;residual_func_X, const std::function&lt; StateVector(const StateVector &amp;, const StateVector &amp;)&gt; &amp;add_func_X)']]],
  ['correction_5fpid_13',['correction_pid',['../structrobot__specs__t.html#a23d091e4a5258c11db6cd9753b598d06',1,'robot_specs_t']]],
  ['current_5fpos_14',['current_pos',['../classOdometryBase.html#a2cff7e2ac1a8860f047acd4f4b8a0465',1,'OdometryBase']]],
  ['current_5fstate_15',['current_state',['../classStateMachine.html#a24f8150f4963d2522f255cf5430aa1a7',1,'StateMachine']]],
  ['customencoder_16',['CustomEncoder',['../classCustomEncoder.html',1,'CustomEncoder'],['../classCustomEncoder.html#a6c17b425b7a899107be1bb7ed7e80b9d',1,'CustomEncoder::CustomEncoder()']]]
];
